---
import Chip from "./Chip.astro";
import Container from "./Container.astro";

const skills = {
	languages: {
		preferred: ["C#", "HTML", "CSS", "JavaScript", "TypeScript", "SQL"],
		nonPreferred: ["F#", "C++", "PHP"],
	},
	backend: {
		preferred: ["ASP.NET Core", "Entity Framework Core", "PostgreSQL"],
		nonPreferred: ["SQLite", "MySQL"],
	},
	frontend: {
		preferred: ["Blazor", "Tailwind CSS", "Astro", "Vue"],
		nonPreferred: ["Nuxt", "WebAssembly", "Bootstrap"],
	},
	other: {
		preferred: ["Docker", "Git", "Linux", "Unit Testing"],
		nonPreferred: ["Nix", "CI/CD", "Figma"],
	},
};

interface Props {
	type: keyof typeof skills;
	name: string;
}

const { type, name } = Astro.props;
---

<li class="[&>*]:h-full">
  <Container>
    <div class="flex gap-2 text-neutral-700 dark:text-neutral-300 items-center">
      {
        type === "languages" && (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="lucide lucide-file-json-2"
          >
            <path d="M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4" />
            <polyline points="14 2 14 8 20 8" />
            <path d="M4 12a1 1 0 0 0-1 1v1a1 1 0 0 1-1 1 1 1 0 0 1 1 1v1a1 1 0 0 0 1 1" />
            <path d="M8 18a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1 1 1 0 0 1-1-1v-1a1 1 0 0 0-1-1" />
          </svg>
        )
      }

      {
        type === "backend" && (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="lucide lucide-server"
          >
            <rect width="20" height="8" x="2" y="2" rx="2" ry="2" />
            <rect width="20" height="8" x="2" y="14" rx="2" ry="2" />
            <line x1="6" x2="6.01" y1="6" y2="6" />
            <line x1="6" x2="6.01" y1="18" y2="18" />
          </svg>
        )
      }

      {
        type === "frontend" && (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="lucide lucide-monitor"
          >
            <rect width="20" height="14" x="2" y="3" rx="2" />
            <line x1="8" x2="16" y1="21" y2="21" />
            <line x1="12" x2="12" y1="17" y2="21" />
          </svg>
        )
      }

      {
        type === "other" && (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="lucide lucide-zap"
          >
            <polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2" />
          </svg>
        )
      }
      <h3 class="text-xl font-bold">
        {name}
      </h3>
    </div>
    <p class="flex gap-1 md:gap-2 flex-wrap font-mono mt-4">
      {skills[type].preferred.map((item) => <Chip emphasis>{item}</Chip>)}
      {skills[type].nonPreferred.map((item) => <Chip>{item}</Chip>)}
    </p>
  </Container>
</li>
