---
import { getEntry } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Section from "@components/Section.astro";
import Container from "@components/Container.astro";
import Chip from "@components/Chip.astro";
import LinkArrow from "@components/LinkArrow.astro";
import Timestamp from "@components/Timestamp.astro";
import { localizeUrl, translate } from "@utils/localization";
import { staticPaths } from "@utils/staticPaths";
import TimestampDetail from "@components/TimestampDetail.astro";

const cv = await getEntry("cv", "content");
export async function getStaticPaths() {
  return staticPaths;
}
const { lang } = Astro.params;
---

<Layout lang={lang}>
  <main class="grid place-items-center p-2 md:p-4">
    <div class="max-w-6xl mx-auto">
      <Section heading={translate("section.skills", lang)}>
        <ul class="grid grid-cols-1 gap-4 sm:grid-cols-2">
          {
            cv.data.skills.map((skill) => (
              <li class="[&>*]:h-full">
                <Container>
                  <div class="flex gap-2 text-neutral-700 dark:text-neutral-300 items-center">
                    <Fragment set:html={skill.icon} />
                    <h3 class="text-xl font-bold">
                      {lang === "pl" && skill.namePolish
                        ? skill.namePolish
                        : skill.name}
                    </h3>
                  </div>
                  <p class="flex gap-1 md:gap-2 flex-wrap font-mono mt-4">
                    {skill.items.map((item) => (
                      <Chip emphasis={item.preferred}>{item.name}</Chip>
                    ))}
                  </p>
                </Container>
              </li>
            ))
          }
        </ul>
      </Section>
      <div class="md:grid md:grid-cols-2 gap-4">
        <Section heading={translate("section.workExperience", lang)}>
          <Container>
            <ul>
              {
                cv.data.workExperience.map((experience) => (
                  <Timestamp
                    dateStart={experience.dateStart}
                    dateEnd={experience.dateEnd}
                    location={
                      lang === "pl"
                        ? experience.locationPolish
                        : experience.location
                    }
                    title={
                      lang === "pl" && experience.titlePolish
                        ? experience.titlePolish
                        : experience.title
                    }
                    company={experience.companyName}
                    companyUrl={experience.companyUrl}
                    type={experience.type}
                    lang={lang}
                  />
                ))
              }
            </ul>
          </Container>
        </Section>
        <Section heading={translate("section.education", lang)}>
          <Container>
            <ul>
              {
                cv.data.education.map((education) => (
                  <Timestamp
                    dateStart={education.dateStart}
                    dateEnd={education.dateEnd}
                    location={
                      lang === "pl"
                        ? education.locationPolish
                        : education.location
                    }
                    title={
                      lang === "pl" && education.titlePolish
                        ? education.titlePolish
                        : education.title
                    }
                    company={education.schoolName}
                    companyUrl={education.schoolUrl}
                    lang={lang}
                  >
                    {education.accomplishments.map((accomplishment) => (
                      <TimestampDetail>
                        <span class="text-neutral-400 dark:text-slate-500">
                          {lang === "pl"
                            ? accomplishment.namePolish + ":"
                            : accomplishment.name + ":"}
                        </span>
                        <span class="tracking-tight">
                          {accomplishment.value}
                        </span>
                      </TimestampDetail>
                    ))}
                  </Timestamp>
                ))
              }
            </ul>
          </Container>
        </Section>
      </div>
      <footer class="flex md:justify-center md:gap-8 justify-evenly gap-4">
        <LinkArrow
          link={localizeUrl("/projects", lang)}
          text={translate("link.projects", lang)}
        />
        <LinkArrow
          link={localizeUrl("/cv/print", lang)}
          text={translate("link.cv-print", lang)}
        />
      </footer>
    </div>
  </main>
</Layout>
