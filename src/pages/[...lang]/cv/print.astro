---
import { getEntry } from "astro:content";
import { localizeUrl, translate } from "@utils/localization.ts";
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import { getCollection } from "astro:content";
import { dates } from "@utils/dates";
import { staticPaths } from "@utils/staticPaths";

const links = await getEntry("links", "content");
const about = await getEntry("about", "content");
const projects = await getCollection("projects");
const cv = await getEntry("cv", "content");
export async function getStaticPaths() {
  return staticPaths;
}
const { lang } = Astro.params;
---

<Layout lang={lang}>
  <div class="p-4 print:p-0 flex flex-col items-center gap-4">
    <aside class="print:hidden">
      <Container>
        <a href={localizeUrl("/cv", lang)} class="underline text-blue-500"
          >[{translate("link.go-back", lang)}]</a
        >
        {translate("cv-print.info", lang)}
      </Container>
    </aside>
    <section class="bg-white text-black w-[21cm] h-[29.7cm] p-[0.5cm] relative">
      <h1 class="font-fancy font-semibold text-3xl text-center">
        Kacper Wyczawski
      </h1>
      <p
        class="text-center font-fancy text-neutral-100 mt-4 bg-fuchsia-700 py-0.5 px-1.5"
      >
        {
          links.data.map((link, i) => (
            <>
              {i !== 0 && " | "}
              {/* prettier-ignore */}
              <a href={link.url} class="underline">{link.printText ?? link.name}</a>
            </>
          ))
        }
      </p>
      <p class="mt-4">
        {about.data.plCv}
      </p>
      <h2
        class="mt-4 bg-gradient-to-b from-white from-50% to-fuchsia-700 to-50%"
      >
        <span
          class="text-neutral-100 font-fancy px-1.5 py-0.5 bg-fuchsia-700 inline-block"
        >
          Umiejętności
        </span>
      </h2>
      <ul class="mt-2 list-dash list-inside">
        {
          cv.data.skills.map((skill) => (
            <li>
              {skill.items.map((item, i) => (
                <>
                  {i !== 0 && " | "}
                  <span class={item.preferred ? "font-bold" : ""}>
                    {item.name}
                  </span>
                </>
              ))}
            </li>
          ))
        }
      </ul>
      <h2
        class="mt-4 bg-gradient-to-b from-white from-50% to-fuchsia-700 to-50%"
      >
        <span
          class="text-neutral-100 font-fancy px-1.5 py-0.5 bg-fuchsia-700 inline-block"
        >
          Doświadczenie zawodowe
        </span>
      </h2>
      <ul class="mt-2 list-dash list-inside">
        {
          cv.data.workExperience.map((item) => (
            <li>
              <span class="font-bold">{item.titlePolish ?? item.title}</span> w
              {/* prettier-ignore */}
              <a href={item.companyUrl} class="underline">{item.companyName}</a>
              <span class="text-gray-400 -ml-1">
                {/* interpolation and negative margin, because prettier is fucking stupid */}
                {`, ${dates(item.dateStart, item.dateEnd, "pl")}, ${item.locationPolish} (${translate(`cv.${item.type}`, "pl")})`}
              </span>
            </li>
          ))
        }
      </ul>
      <h2
        class="mt-4 bg-gradient-to-b from-white from-50% to-fuchsia-700 to-50%"
      >
        <span
          class="text-neutral-100 font-fancy px-1.5 py-0.5 bg-fuchsia-700 inline-block"
        >
          Edukacja
        </span>
      </h2>
      <ul class="mt-2 list-dash list-inside">
        {
          cv.data.education.map((entry) => (
            <li>
              <span class="font-bold">{entry.titlePolish}</span> w
              {/* prettier-ignore */}
              <a href={entry.schoolUrl} class="underline">{entry.schoolName}</a>
              <span class="text-gray-400 -ml-1">
                {/* interpolation and negative margin, because prettier is fucking stupid */}
                {`, ${dates(entry.dateStart, entry.dateEnd, "pl")}`}
              </span>
              <ul class="ml-4 flex gap-2 text-gray-400">
                {entry.accomplishments.map((accomplishment) => (
                  <li>
                    {accomplishment.namePolish}:
                    <span class="font-bold">{accomplishment.value}</span>
                  </li>
                ))}
              </ul>
            </li>
          ))
        }
      </ul>
      <h2
        class="mt-4 bg-gradient-to-b from-white from-50% to-fuchsia-700 to-50%"
      >
        <span
          class="text-neutral-100 font-fancy px-1.5 py-0.5 bg-fuchsia-700 inline-block"
        >
          Projekty
        </span>
      </h2>
      <p class="mt-2 text-gray-400 italic text-sm">
        Poniższe, oraz inne moje projekty są dostępne na <a
          href="https://github.com/kacperwyczawski"
          class="underline">GitHubie</a
        >. Poza nimi udzielam się również przy innych projektach open source,
        m.in. Astro, NixOS czy Monkeytype
      </p>
      <ul class="mt-2 list-dash list-inside">
        {
          projects.toReversed().map((project) => (
            <li class="mt-2">
              <span class="font-bold font-fancy">{project.data.name}</span>
              <a
                href={project.data.liveUrl ?? project.data.sourceUrl}
                class="underline text-sm"
              >
                {"(" +
                  (project.data.liveUrl ?? project.data.sourceUrl)?.substring(
                    8
                  ) +
                  ")"}
              </a>
              <p class="ml-4 text-gray-400 text-sm italic">
                ({project.data.technologies.join(", ")})
              </p>
              <p class="ml-4 indent-8">{project.data.descriptionPl}</p>
            </li>
          ))
        }
      </ul>
      <div
        id="footer"
        class="text-[0.5rem] absolute bottom-[0.5cm] text-gray-400 mt-4"
      >
      </div>
    </section>
    <div class="print:hidden">
      <Container>
        <label for="footer-text" class="block mb-2">Optional footer:</label>
        <textarea
          name="footer-text"
          id="footer-text"
          cols="50"
          rows="8"
          class="text-black p-2 rounded-lg focus:outline-none"></textarea>
      </Container>
    </div>
  </div>
</Layout>
<script>
  const footer = document.getElementById("footer") as HTMLDivElement;
  const footerText = document.getElementById(
    "footer-text"
  ) as HTMLTextAreaElement;
  footerText.addEventListener("input", () => {
    footer.innerHTML = footerText.value;
  });
</script>
<style>
  @page {
    size: A4 portrait;
    margin: 0;
  }
</style>
